# -*- coding: utf-8 -*-
"""smart_money_algo.ipynb
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/15H89pOcgzNX8nLyo0QeIaRsGthcuXyrs
"""

import yfinance as yf
import mibian as mibian
import pandas as pd
import numpy as np
from datetime import datetime as dt
from datetime import date

index_header_dict = {
    'contractSymbol': 0,
    'lastTradeDate' : 1,
    'strike': 2,
    'lastPrice': 3,
    'bid' : 4,
    'ask' : 5,
    'change' : 6,
    'percentChange' : 7,
    'volume' : 8,
    'openInterest' : 9, 
    'impliedVolatility' : 10,
    'inTheMoney' : 11, 
    'contractSize' : 12,
    'currency' : 13,
}
#functions
#Calculating Options Greeks
def calc_greeks(ticker, middle_call_option, expiration_date):
    #gets the current price of the underlying stock
    price_history = ticker.history()
    underlying_price = price_history['Close'].iloc[-1]

    expiration_date_num = ''
    for character in expiration_date: 
        if character != '-':
            expiration_date_num += character

    expiration_date_num = dt.strptime(expiration_date_num, '%Y%m%d').date()
    today = date.today()
    time = str(expiration_date_num - today)

    time = int(time[0])
    impy_volitility = middle_call_option[index_header_dict['impliedVolatility']] 
    price = underlying_price
    strike = middle_call_option[index_header_dict['strike']]

    call_greeks = mibian.BS([price, strike, 0, time], volatility=impy_volitility)
    print(call_greeks.callPrice)
    print(call_greeks.callDelta)
    print(call_greeks.callTheta)
    print(call_greeks.vega)
    print(call_greeks.gamma)


#execution
ticker = yf.Ticker('SPY')

#gets all the expirations dates for the ticker and puts it in a single coloumn data fram
expiration_dates = pd.DataFrame(ticker.options)
expiration_date = expiration_dates.loc[13][0]
print(expiration_date)

#gets all call and put options for the selected expiration date
options_chain_calls = pd.DataFrame(ticker.option_chain(expiration_date).calls)
options_chain_puts = pd.DataFrame(ticker.option_chain(expiration_date).puts)

print(options_chain_calls)
df_header = options_chain_calls.columns.values.flatten()

#calculates greeks for all options within the option chain of 1 expriation date
num_options = len(options_chain_calls)
counter = 1
while (counter < num_options):
    call_option = options_chain_calls.loc[counter].values.flatten().tolist()
    print(df_header)
    print(call_option)
    calc_greeks(ticker, call_option, expiration_date)
    counter+=1










